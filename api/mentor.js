// /api/mentor.js  (Vercel Serverless Function)
export default async function handler(req, res) {
  if (req.method !== 'POST') return res.status(405).json({ error: 'Method not allowed' });

  const { system, user, history = [] } = req.body || {};
  const openaiKey = process.env.OPENAI_API_KEY;

  // Sem OPENAI_API_KEY ‚Üí responde via ‚Äúmock‚Äù gastron√¥mico inteligente
  if (!openaiKey) {
    const q = (user || '').toLowerCase();
    // exemplo: ingredientes reconhecidos
    if (q.includes('banana') && (q.includes('lombo') || q.includes('porco'))) {
      const text = [
        `üîπ **Reflexiva** ‚Äî ‚ÄúDo√ßura, gordura e acidez: a tr√≠ade que d√° vida ao prato.‚Äù`,
        `üîπ **Executiva** ‚Äî *Lombo su√≠no laqueado com banana e pimenta, finalizado com lim√£o*:\n` +
        `‚Ä¢ Sele o lombo; deglace com suco de laranja; glace com mel/rapadura.\n` +
        `‚Ä¢ Banana caramelizada (manteiga + mascavo + sal) + pimenta dedo-de-mo√ßa.\n` +
        `‚Ä¢ Final: raspas e gotas de lim√£o. Acomp.: pur√™ de mandioca ou arroz de castanhas.\n` +
        `‚Ä¢ CMV: padronize 160 g/por√ß√£o; banana madura; controle perdas no mise en place.`,
        `üîπ **Did√°tica** ‚Äî A banana pede acidez e sal para equil√≠brio; o laqueado traz brilho/umami. Textura crocante eleva valor percebido sem estourar custo.`
      ].join('\n');
      return res.status(200).json({ text });
    }
    const text = [
      `üîπ **Reflexiva** ‚Äî ‚ÄúDecis√£o √© corte com prop√≥sito. Qual √© o prop√≥sito agora?‚Äù`,
      `üîπ **Executiva** ‚Äî Diga objetivo, contexto e op√ß√µes; devolvo plano em 3 camadas com riscos e m√©tricas.`,
      `üîπ **Did√°tica** ‚Äî Assim evitamos genericidade e vamos ao aplic√°vel.`
    ].join('\n');
    return res.status(200).json({ text });
  }

  // Com OpenAI (opcional ‚Äî define OPENAI_API_KEY nas Environment Variables)
  try {
    const sys = `
${system || ''}
Regras:
- Responda SEMPRE √† pergunta do usu√°rio, concreta e espec√≠fica para bares/restaurantes.
- Mantenha o formato: Reflexiva ‚Ä¢ Executiva ‚Ä¢ Did√°tica.
- Se houver ingredientes/receitas, entregue ficha clara (t√©cnica + CMV/execu√ß√£o).
`.trim();

    const historyText = history.map(m => `${m.role === 'user' ? 'Usu√°rio' : 'Mentor'}: ${m.text}`).join('\n');
    const finalPrompt = `${sys}\n\nHist√≥rico (recente):\n${historyText}\n\nUsu√°rio: ${user}\nMentor:`.trim();

    const r = await fetch('https://api.openai.com/v1/responses', {
      method:'POST',
      headers:{
        'Authorization': `Bearer ${openaiKey}`,
        'Content-Type':'application/json'
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini',
        input: finalPrompt
      })
    });
    const data = await r.json();
    const text = data?.output_text || data?.text || JSON.stringify(data);
    return res.status(200).json({ text });
  } catch (e) {
    return res.status(500).json({ error: 'LLM call failed', details: String(e) });
  }
}
